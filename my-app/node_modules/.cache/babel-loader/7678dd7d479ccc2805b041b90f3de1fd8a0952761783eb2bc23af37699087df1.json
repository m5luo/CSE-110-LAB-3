{"ast":null,"code":"var _jsxFileName = \"/Users/julie/Documents/GitHub/CSE-110-LAB-2/my-app/src/hookExercise.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { ThemeContext } from \"./ThemeContext\";\n// export function ClickCounter() {\n//     let count = 0;\n\n//     const handleClick = () => {\n//       count += 1;\n//       console.log('Count:', count);\n//     };\n\n//     return (\n//       <div>\n//         <p>Clicks: {count}</p>\n//         <button onClick={handleClick}>Click me!</button>\n//       </div>\n//     );\n// }\n// Wrapper component to provide context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleTheme({\n  toggleTheme\n}) {\n  _s();\n  const theme = useContext(ThemeContext);\n  // const [currentTheme, setCurrentTheme] = useState(themes.light);\n\n  // const toggleTheme = () => {\n  //     setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n  // };\n\n  return (\n    /*#__PURE__*/\n    // <ThemeContext.Provider value={currentTheme}>\n    //     <button onClick={toggleTheme}> Toggle Theme </button>\n    //     <ClickCounter />\n    // </ThemeContext.Provider>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTheme,\n        style: {\n          background: theme.foreground,\n          color: theme.background\n        },\n        children: \"Toggle Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(ToggleTheme, \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n_c = ToggleTheme;\nexport default ToggleTheme;\nexport function ClickCounter() {\n  _s2();\n  const [count, setCount] = useState(0);\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  }, [count]);\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.background,\n      color: theme.foreground,\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      style: {\n        background: theme.foreground,\n        color: theme.background\n      },\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s2(ClickCounter, \"QwTh87uW/LikTGP2WSDizL9Txl8=\");\n_c2 = ClickCounter;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleTheme\");\n$RefreshReg$(_c2, \"ClickCounter\");","map":{"version":3,"names":["React","useState","useEffect","useContext","ThemeContext","jsxDEV","_jsxDEV","ToggleTheme","toggleTheme","_s","theme","children","onClick","style","background","foreground","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","ClickCounter","_s2","count","setCount","handleClick","document","title","padding","_c2","$RefreshReg$"],"sources":["/Users/julie/Documents/GitHub/CSE-110-LAB-2/my-app/src/hookExercise.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { ThemeContext, themes } from \"./ThemeContext\";\n// export function ClickCounter() {\n//     let count = 0;\n  \n//     const handleClick = () => {\n//       count += 1;\n//       console.log('Count:', count);\n//     };\n  \n//     return (\n//       <div>\n//         <p>Clicks: {count}</p>\n//         <button onClick={handleClick}>Click me!</button>\n//       </div>\n//     );\n// }\n// Wrapper component to provide context\nfunction ToggleTheme({ toggleTheme }: { toggleTheme: any }) {\n    const theme = useContext(ThemeContext);\n    // const [currentTheme, setCurrentTheme] = useState(themes.light);\n   \n    // const toggleTheme = () => {\n    //     setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n    // };\n   \n    return (\n        // <ThemeContext.Provider value={currentTheme}>\n        //     <button onClick={toggleTheme}> Toggle Theme </button>\n        //     <ClickCounter />\n        // </ThemeContext.Provider>\n        <div>\n            <button onClick={toggleTheme} style={{ background: theme.foreground, color: theme.background }}>\n                Toggle Theme\n            </button>\n        </div>\n    );\n}\nexport default ToggleTheme;\n\nexport function ClickCounter() {\n    const [count, setCount] = useState(0);\n    const handleClick = () => {\n        setCount(count + 1);\n    };\n    useEffect(() => {\n        document.title = `You clicked ${count} times`;\n    }, [count]);\n    const theme = useContext(ThemeContext);\n    return (\n        <div\n            style={{\n            background: theme.background,\n            color: theme.foreground,\n            padding: \"20px\",\n            }}\n        >\n            <p>You clicked {count} times </p>\n            <button\n                onClick={() => setCount(count + 1)}\n                style={{ background: theme.foreground, color: theme.background }}\n            >\n                Click me\n            </button>\n        </div>\n    );\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,YAAY,QAAgB,gBAAgB;AACrD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAAC;EAAEC;AAAkC,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAMC,KAAK,GAAGP,UAAU,CAACC,YAAY,CAAC;EACtC;;EAEA;EACA;EACA;;EAEA;IAAA;IACI;IACA;IACA;IACA;IACAE,OAAA;MAAAK,QAAA,eACIL,OAAA;QAAQM,OAAO,EAAEJ,WAAY;QAACK,KAAK,EAAE;UAAEC,UAAU,EAAEJ,KAAK,CAACK,UAAU;UAAEC,KAAK,EAAEN,KAAK,CAACI;QAAW,CAAE;QAAAH,QAAA,EAAC;MAEhG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;AAEd;AAACX,EAAA,CAnBQF,WAAW;AAAAc,EAAA,GAAXd,WAAW;AAoBpB,eAAeA,WAAW;AAE1B,OAAO,SAASe,YAAYA,CAAA,EAAG;EAAAC,GAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMyB,WAAW,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB,CAAC;EACDtB,SAAS,CAAC,MAAM;IACZyB,QAAQ,CAACC,KAAK,GAAG,eAAeJ,KAAK,QAAQ;EACjD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX,MAAMd,KAAK,GAAGP,UAAU,CAACC,YAAY,CAAC;EACtC,oBACIE,OAAA;IACIO,KAAK,EAAE;MACPC,UAAU,EAAEJ,KAAK,CAACI,UAAU;MAC5BE,KAAK,EAAEN,KAAK,CAACK,UAAU;MACvBc,OAAO,EAAE;IACT,CAAE;IAAAlB,QAAA,gBAEFL,OAAA;MAAAK,QAAA,GAAG,cAAY,EAACa,KAAK,EAAC,SAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjCd,OAAA;MACIM,OAAO,EAAEA,CAAA,KAAMa,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MACnCX,KAAK,EAAE;QAAEC,UAAU,EAAEJ,KAAK,CAACK,UAAU;QAAEC,KAAK,EAAEN,KAAK,CAACI;MAAW,CAAE;MAAAH,QAAA,EACpE;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACG,GAAA,CA1BeD,YAAY;AAAAQ,GAAA,GAAZR,YAAY;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}