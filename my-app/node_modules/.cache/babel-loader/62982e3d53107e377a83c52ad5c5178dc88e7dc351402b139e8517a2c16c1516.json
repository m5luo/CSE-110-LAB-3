{"ast":null,"code":"var _jsxFileName = \"/Users/julie/Documents/GitHub/CSE-110-LAB-2/my-app/src/hookExercise.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeContext, themes } from \"./ThemeContext\";\nimport App from './App';\n// export function ClickCounter() {\n//     let count = 0;\n\n//     const handleClick = () => {\n//       count += 1;\n//       console.log('Count:', count);\n//     };\n\n//     return (\n//       <div>\n//         <p>Clicks: {count}</p>\n//         <button onClick={handleClick}>Click me!</button>\n//       </div>\n//     );\n// }\n// Wrapper component to provide context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleTheme() {\n  _s();\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\n  const toggleTheme = () => {\n    setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      children: \" Toggle Theme \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(ToggleTheme, \"XUkQGtkba25k8FAF8WwW2uStAco=\");\n_c = ToggleTheme;\nexport default ToggleTheme;\n// export function ClickCounter() {\n//     const [count, setCount] = useState(0);\n//     const handleClick = () => {\n//         setCount(count + 1);\n//     };\n//     useEffect(() => {\n//         document.title = `You clicked ${count} times`;\n//     }, [count]);\n//     const theme = useContext(ThemeContext);\n//     return (\n//         <div\n//             style={{\n//             background: theme.background,\n//             color: theme.foreground,\n//             padding: \"20px\",\n//             }}\n//         >\n//             <p>You clicked {count} times </p>\n//             <button\n//                 onClick={() => setCount(count + 1)}\n//                 style={{ background: theme.foreground, color: theme.background }}\n//             >\n//                 Click me\n//             </button>\n//         </div>\n//     );\n// }\nvar _c;\n$RefreshReg$(_c, \"ToggleTheme\");","map":{"version":3,"names":["React","useState","ThemeContext","themes","App","jsxDEV","_jsxDEV","ToggleTheme","_s","currentTheme","setCurrentTheme","light","toggleTheme","dark","Provider","value","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/julie/Documents/GitHub/CSE-110-LAB-2/my-app/src/hookExercise.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { ThemeContext, themes } from \"./ThemeContext\";\nimport App from './App';\n// export function ClickCounter() {\n//     let count = 0;\n  \n//     const handleClick = () => {\n//       count += 1;\n//       console.log('Count:', count);\n//     };\n  \n//     return (\n//       <div>\n//         <p>Clicks: {count}</p>\n//         <button onClick={handleClick}>Click me!</button>\n//       </div>\n//     );\n// }\n// Wrapper component to provide context\nfunction ToggleTheme() {\n    const [currentTheme, setCurrentTheme] = useState(themes.light);\n   \n    const toggleTheme = () => {\n        setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n    };\n   \n    return (\n        <ThemeContext.Provider value={currentTheme}>\n            <button onClick={toggleTheme}> Toggle Theme </button>\n            <App />\n        </ThemeContext.Provider>\n    );\n}\nexport default ToggleTheme;\n// export function ClickCounter() {\n//     const [count, setCount] = useState(0);\n//     const handleClick = () => {\n//         setCount(count + 1);\n//     };\n//     useEffect(() => {\n//         document.title = `You clicked ${count} times`;\n//     }, [count]);\n//     const theme = useContext(ThemeContext);\n//     return (\n//         <div\n//             style={{\n//             background: theme.background,\n//             color: theme.foreground,\n//             padding: \"20px\",\n//             }}\n//         >\n//             <p>You clicked {count} times </p>\n//             <button\n//                 onClick={() => setCount(count + 1)}\n//                 style={{ background: theme.foreground, color: theme.background }}\n//             >\n//                 Click me\n//             </button>\n//         </div>\n//     );\n// }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAA+B,OAAO;AAC9D,SAASC,YAAY,EAAEC,MAAM,QAAQ,gBAAgB;AACrD,OAAOC,GAAG,MAAM,OAAO;AACvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAACE,MAAM,CAACQ,KAAK,CAAC;EAE9D,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBF,eAAe,CAACD,YAAY,KAAKN,MAAM,CAACQ,KAAK,GAAGR,MAAM,CAACU,IAAI,GAAGV,MAAM,CAACQ,KAAK,CAAC;EAC/E,CAAC;EAED,oBACIL,OAAA,CAACJ,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAEN,YAAa;IAAAO,QAAA,gBACvCV,OAAA;MAAQW,OAAO,EAAEL,WAAY;MAAAI,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDf,OAAA,CAACF,GAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEhC;AAACb,EAAA,CAbQD,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAcpB,eAAeA,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}